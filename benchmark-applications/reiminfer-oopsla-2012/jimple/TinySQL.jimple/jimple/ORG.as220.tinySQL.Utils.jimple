public class ORG.as220.tinySQL.Utils extends java.lang.Object
{

    public void <init>()
    {
        ORG.as220.tinySQL.Utils r0;

        r0 := @this: ORG.as220.tinySQL.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final byte[] intToLittleEndian(int)
    {
        byte[] r0;
        int $i0, i2, i3;
        byte $b1;

        i2 := @parameter0: int;

        r0 = newarray (byte)[4];

        i3 = 0;

        goto label2;

     label1:
        $i0 = i2 % 256;

        $b1 = (byte) $i0;

        r0[i3] = $b1;

        i2 = i2 / 256;

        i3 = i3 + 1;

     label2:
        if i3 < 4 goto label1;

        return r0;
    }

    public static final byte[] shortToLittleEndian(short)
    {
        byte[] r0;
        int $i0, $i2, i4;
        byte $b1;
        short s3;

        s3 := @parameter0: short;

        r0 = newarray (byte)[2];

        i4 = 0;

        goto label2;

     label1:
        $i0 = s3 % 256;

        $b1 = (byte) $i0;

        r0[i4] = $b1;

        $i2 = s3 / 256;

        s3 = (short) $i2;

        i4 = i4 + 1;

     label2:
        if i4 < 2 goto label1;

        return r0;
    }

    public static final double vax_to_long(byte[])
    {
        byte[] r0;
        long l0, $l2, $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l14, $l15, $l16, $l17;
        byte $b1, $b3, $b8, $b13;
        double $d0;

        r0 := @parameter0: byte[];

        $b1 = r0[0];

        $l2 = (long) $b1;

        $l7 = 255L & $l2;

        $b3 = r0[1];

        $l4 = (long) $b3;

        $l5 = 255L & $l4;

        $l6 = $l5 << 8;

        $l12 = $l7 | $l6;

        $b8 = r0[2];

        $l9 = (long) $b8;

        $l10 = 255L & $l9;

        $l11 = $l10 << 16;

        $l17 = $l12 | $l11;

        $b13 = r0[3];

        $l14 = (long) $b13;

        $l15 = 255L & $l14;

        $l16 = $l15 << 24;

        l0 = $l17 | $l16;

        $d0 = (double) l0;

        return $d0;
    }

    public static final int vax_to_short(byte[])
    {
        byte[] r0;
        byte $b0, $b2;
        short $s1, $s3;
        int $i4, $i5;

        r0 := @parameter0: byte[];

        $b0 = r0[0];

        $s1 = staticinvoke <ORG.as220.tinySQL.Utils: short fixByte(byte)>($b0);

        $b2 = r0[1];

        $s3 = staticinvoke <ORG.as220.tinySQL.Utils: short fixByte(byte)>($b2);

        $i4 = $s3 * 256;

        $i5 = $s1 + $i4;

        return $i5;
    }

    public static final short fixByte(byte)
    {
        byte b0;
        int $i1;
        short $s2;

        b0 := @parameter0: byte;

        if b0 >= 0 goto label1;

        $i1 = b0 + 256;

        $s2 = (short) $i1;

        return $s2;

     label1:
        return b0;
    }

    public static final byte[] forceToSize(java.lang.String, int, byte, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r1, $r4;
        int i0, $i2, $i3, $i4, $i5, $i6;
        byte b1;
        byte[] r2, r3, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        b1 := @parameter2: byte;

        r1 := @parameter3: java.lang.String;

        if r0 == null goto label1;

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i6 != i0 goto label1;

        $r6 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        return $r6;

     label1:
        r2 = newarray (byte)[i0];

        if r0 != null goto label2;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r2, b1);

        return r2;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 <= i0 goto label3;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        return $r5;

     label3:
        r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        $i3 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r2, 0, $i3);

        $i5 = lengthof r3;

        $i4 = lengthof r2;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r2, $i5, $i4, b1);

        return r2;
    }

    public static final char[] forceToSize(java.lang.String, int, char) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, $r2;
        int i0, $i2, $i3, $i4, $i5, $i6;
        char c1;
        char[] r1, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        if r0 == null goto label1;

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i6 != i0 goto label1;

        $r4 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        return $r4;

     label1:
        r1 = newarray (char)[i0];

        if r0 != null goto label2;

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r1, c1);

        return r1;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 <= i0 goto label3;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        return $r3;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i3, r1, 0);

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = lengthof r1;

        staticinvoke <java.util.Arrays: void fill(char[],int,int,char)>(r1, $i4, $i5, c1);

        return r1;
    }

    public static final byte[] forceToSizeLeft(java.lang.String, int, byte, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r1, $r4;
        int i0, i2, $i3, $i4, $i5, $i6, $i7;
        byte b1;
        byte[] r2, r3, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        b1 := @parameter2: byte;

        r1 := @parameter3: java.lang.String;

        if r0 == null goto label1;

        $i7 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i7 != i0 goto label1;

        $r6 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        return $r6;

     label1:
        r2 = newarray (byte)[i0];

        if r0 != null goto label2;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r2, b1);

        return r2;

     label2:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 <= i0 goto label3;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        return $r5;

     label3:
        r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        $i5 = lengthof r2;

        $i4 = lengthof r3;

        i2 = $i5 - $i4;

        $i6 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r2, i2, $i6);

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r2, 0, i2, b1);

        return r2;
    }

    public static java.lang.String forceToSizeLeft(java.lang.String, int, char)
    {
        java.lang.String r0, $r7, $r8;
        int i0, i2, $i3, $i4, $i5, i6;
        char c1;
        char[] r2;
        java.lang.StringBuffer $r3, $r4, $r9, r10;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        if r0 == null goto label1;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i5 != i0 goto label1;

        return r0;

     label1:
        if r0 != null goto label2;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(int)>(i0);

        r10 = $r9;

        goto label3;

     label2:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        r10 = $r3;

     label3:
        $i3 = virtualinvoke r10.<java.lang.StringBuffer: int length()>();

        if $i3 <= i0 goto label4;

        virtualinvoke r10.<java.lang.StringBuffer: void setLength(int)>(i0);

        $r8 = virtualinvoke r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

     label4:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>(i0);

        $i4 = virtualinvoke r10.<java.lang.StringBuffer: int length()>();

        i2 = i0 - $i4;

        r2 = newarray (char)[i2];

        i6 = 0;

        goto label6;

     label5:
        r2[i6] = c1;

        i6 = i6 + 1;

     label6:
        if i6 < i2 goto label5;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>(r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(r10);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public static final void delFile(java.lang.String) throws java.lang.NullPointerException, java.io.IOException
    {
        java.lang.String r0, $r6, $r11;
        java.io.File $r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.io.IOException $r7;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r0);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label2;

        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not delete file: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("File: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist. No action taken on delete.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ORG.as220.tinySQL.util.Log: void debug(java.lang.String)>($r6);

     label2:
        return;
    }

    public static final void delFile(java.lang.String, java.lang.String) throws java.lang.NullPointerException, java.io.IOException
    {
        java.lang.String r0, r1, $r5, $r6, $r9, $r16;
        java.io.File $r3;
        java.lang.StringBuilder $r4, $r7, $r8, $r11, $r12, $r13, $r14, $r15;
        boolean $z0, $z1;
        java.io.IOException $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = <java.io.File: java.lang.String separator>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r9);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label1;

        $r10 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not delete file: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label1:
        return;
    }

    public static final boolean renameFile(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r8, $r14, $r18;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r15, $r16, $r17;
        java.io.File $r9, $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Rename] ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ORG.as220.tinySQL.util.Log: void warn(java.lang.String)>($r8);

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r0);

        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r1);

        $z1 = virtualinvoke $r9.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("File ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ORG.as220.tinySQL.util.Log: void warn(java.lang.String)>($r18);

        return 0;

     label1:
        $z2 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("File ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exist");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ORG.as220.tinySQL.util.Log: void warn(java.lang.String)>($r14);

        return 0;

     label2:
        z0 = virtualinvoke $r9.<java.io.File: boolean renameTo(java.io.File)>($r10);

        return z0;
    }

    public static final java.lang.String stripPathAndExtension(java.lang.String)
    {
        java.lang.String r0, r1, r2;
        int i0, i1, i2;

        r0 := @parameter0: java.lang.String;

        r1 = <java.io.File: java.lang.String separator>;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1);

        if i0 >= 0 goto label1;

        i1 = 0;

        goto label2;

     label1:
        i1 = i0 + 1;

     label2:
        i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if i2 >= 0 goto label3;

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

     label3:
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);

        return r2;
    }

    public static final java.util.Vector getAllFiles(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r6, $r10, r12;
        java.io.File r4, $r9, $r11;
        java.io.File[] r5;
        ORG.as220.tinySQL.Utils$1MyDir $r7;
        java.util.Vector $r8;
        boolean $z0;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r7 = new ORG.as220.tinySQL.Utils$1MyDir;

        specialinvoke $r7.<ORG.as220.tinySQL.Utils$1MyDir: void <init>()>();

        $r8 = new java.util.Vector;

        specialinvoke $r8.<java.util.Vector: void <init>(int)>(20);

        r4 = virtualinvoke $r7.<ORG.as220.tinySQL.Utils$1MyDir: java.io.File createFileObject(java.lang.String)>(r0);

        r5 = virtualinvoke $r7.<ORG.as220.tinySQL.Utils$1MyDir: java.io.File[] getFiles(java.io.File,boolean)>(r4, 0);

        r12 = null;

        if r1 == null goto label1;

        r12 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();

     label1:
        i0 = 0;

        goto label5;

     label2:
        $r9 = r5[i0];

        $r10 = virtualinvoke $r9.<java.io.File: java.lang.String toString()>();

        r6 = virtualinvoke $r10.<java.lang.String: java.lang.String toUpperCase()>();

        if r12 == null goto label3;

        $z0 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(r12);

        if $z0 == 0 goto label4;

     label3:
        $r11 = r5[i0];

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r11);

     label4:
        i0 = i0 + 1;

     label5:
        $i1 = lengthof r5;

        if i0 < $i1 goto label2;

        return $r8;
    }

    public static int printResultSet(java.sql.ResultSet, java.io.PrintStream) throws java.sql.SQLException
    {
        java.sql.ResultSet r0;
        java.io.PrintStream r1;
        java.sql.ResultSetMetaData r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19;
        java.lang.String[] r3;
        int[] r4;
        java.lang.String $r5, $r6, $r9, $r10, $r11, $r13, $r15, $r19, $r22, $r23, $r25, $r27, r30;
        java.lang.StringBuffer $r7, $r16;
        java.lang.StringBuilder $r8, $r12, $r21, $r24;
        boolean $z0, $z1;

        r0 := @parameter0: java.sql.ResultSet;

        r1 := @parameter1: java.io.PrintStream;

        r2 = interfaceinvoke r0.<java.sql.ResultSet: java.sql.ResultSetMetaData getMetaData()>();

        i0 = interfaceinvoke r2.<java.sql.ResultSetMetaData: int getColumnCount()>();

        r3 = newarray (java.lang.String)[i0];

        r4 = newarray (int)[i0];

        i14 = 1;

        goto label02;

     label01:
        $i1 = i14 - 1;

        $r5 = interfaceinvoke r2.<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)>(i14);

        r3[$i1] = $r5;

        $i3 = i14 - 1;

        $i2 = i14 - 1;

        $r6 = r3[$i2];

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i5 = interfaceinvoke r2.<java.sql.ResultSetMetaData: int getColumnDisplaySize(int)>(i14);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        r4[$i3] = $i6;

        i14 = i14 + 1;

     label02:
        if i14 <= i0 goto label01;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        i15 = 1;

        goto label04;

     label03:
        $r8 = new java.lang.StringBuilder;

        $r9 = interfaceinvoke r2.<java.sql.ResultSetMetaData: java.lang.String getColumnLabel(int)>(i15);

        $i7 = i15 - 1;

        $i8 = r4[$i7];

        $r10 = staticinvoke <ORG.as220.tinySQL.Utils: java.lang.String format(java.lang.String,int)>($r9, $i8);

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        i15 = i15 + 1;

     label04:
        if i15 <= i0 goto label03;

        $r15 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        i16 = 1;

        goto label08;

     label05:
        i17 = 1;

        goto label07;

     label06:
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        i17 = i17 + 1;

     label07:
        $i9 = i16 - 1;

        $i10 = r4[$i9];

        if i17 <= $i10 goto label06;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i16 = i16 + 1;

     label08:
        if i16 <= i0 goto label05;

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r19);

        i18 = 0;

        goto label14;

     label09:
        $i11 = virtualinvoke $r7.<java.lang.StringBuffer: int length()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i11);

        i19 = 1;

        goto label13;

     label10:
        r30 = interfaceinvoke r0.<java.sql.ResultSet: java.lang.String getString(int)>(i19);

        $z1 = interfaceinvoke r0.<java.sql.ResultSet: boolean wasNull()>();

        if $z1 == 0 goto label11;

        r30 = "<null>";

     label11:
        if r30 != null goto label12;

        r30 = "<!null>";

     label12:
        $r21 = new java.lang.StringBuilder;

        $i12 = i19 - 1;

        $i13 = r4[$i12];

        $r22 = staticinvoke <ORG.as220.tinySQL.Utils: java.lang.String format(java.lang.String,int)>(r30, $i13);

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r22);

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        i19 = i19 + 1;

     label13:
        if i19 <= i0 goto label10;

        $r27 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r27);

        i18 = i18 + 1;

     label14:
        $z0 = interfaceinvoke r0.<java.sql.ResultSet: boolean next()>();

        if $z0 != 0 goto label09;

        return i18;
    }

    public static java.lang.String format(java.lang.String, int)
    {
        java.lang.String r0, r4;
        int i0, $i1, i2;
        java.lang.StringBuffer $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 >= i0 goto label3;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>(r0);

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label2;

     label1:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i2 = i2 + 1;

     label2:
        if i2 < i0 goto label1;

        r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label4;

     label3:
        r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label4:
        return r4;
    }
}
