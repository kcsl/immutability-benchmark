public class ORG.as220.tinySQL.sqlparser.ParameterValue extends java.lang.Object implements ORG.as220.tinySQL.sqlparser.LValue
{
    private java.lang.Object value;
    private boolean valueSet;

    public void <init>()
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: boolean valueSet> = 0;

        return;
    }

    public java.lang.Object evaluate(ORG.as220.tinySQL.tsRow) throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;
        ORG.as220.tinySQL.tsRow r1;
        boolean $z0;
        java.lang.Object $r2;
        ORG.as220.tinySQL.tinySQLException $r3;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        r1 := @parameter0: ORG.as220.tinySQL.tsRow;

        $z0 = r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: boolean valueSet>;

        if $z0 != 0 goto label1;

        $r3 = new ORG.as220.tinySQL.tinySQLException;

        specialinvoke $r3.<ORG.as220.tinySQL.tinySQLException: void <init>(java.lang.String)>("Parameter not set");

        throw $r3;

     label1:
        $r2 = r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: java.lang.Object value>;

        return $r2;
    }

    public boolean isEmpty()
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;
        boolean $z0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        $z0 = r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: boolean valueSet>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public void clear()
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: boolean valueSet> = 0;

        r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: java.lang.Object value> = null;

        return;
    }

    public void setValue(java.lang.Object)
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;
        java.lang.Object r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        r1 := @parameter0: java.lang.Object;

        r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: boolean valueSet> = 1;

        r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: java.lang.Object value> = r1;

        return;
    }

    public java.lang.Object getValue()
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;
        java.lang.Object $r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        $r1 = r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: java.lang.Object value>;

        return $r1;
    }

    public java.lang.String getName()
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;
        java.lang.StringBuilder $r1, $r3;
        int $i0;
        java.lang.String $r2, $r4;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-ParameterValue");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.util.Enumeration getChildren()
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;
        java.util.Enumeration $r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        $r1 = staticinvoke <ORG.as220.tinySQL.util.EmptyEnumeration: java.util.Enumeration getEnum()>();

        return $r1;
    }

    public int getChildCount()
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        return 0;
    }

    public java.lang.String toString()
    {
        ORG.as220.tinySQL.sqlparser.ParameterValue r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: ORG.as220.tinySQL.sqlparser.ParameterValue;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        $r2 = virtualinvoke r0.<ORG.as220.tinySQL.sqlparser.ParameterValue: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
