class ORG.as220.tinySQL.sqlparser.Operator$InOperator extends ORG.as220.tinySQL.sqlparser.Operator
{

    private void <init>()
    {
        ORG.as220.tinySQL.sqlparser.Operator$InOperator r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$InOperator;

        specialinvoke r0.<ORG.as220.tinySQL.sqlparser.Operator: void <init>(ORG.as220.tinySQL.sqlparser.Operator)>(null);

        return;
    }

    public java.lang.Object evaluate(java.lang.Object, java.lang.Object) throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.Operator$InOperator r0;
        java.lang.Object r1, r2, r4, r5;
        java.lang.Object[] r3;
        ORG.as220.tinySQL.tinySQLException $r6;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$InOperator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = (java.lang.Object[]) r2;

        r4 = r3[0];

        r5 = r3[1];

        $r6 = new ORG.as220.tinySQL.tinySQLException;

        specialinvoke $r6.<ORG.as220.tinySQL.tinySQLException: void <init>(java.lang.String)>("Not yet implemented: IN");

        throw $r6;
    }

    public java.lang.String toString()
    {
        ORG.as220.tinySQL.sqlparser.Operator$InOperator r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$InOperator;

        return " LIKE ";
    }

    public int getLevel()
    {
        ORG.as220.tinySQL.sqlparser.Operator$InOperator r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$InOperator;

        return 1;
    }

    void <init>(ORG.as220.tinySQL.sqlparser.Operator$InOperator)
    {
        ORG.as220.tinySQL.sqlparser.Operator$InOperator r0, r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$InOperator;

        r1 := @parameter0: ORG.as220.tinySQL.sqlparser.Operator$InOperator;

        specialinvoke r0.<ORG.as220.tinySQL.sqlparser.Operator$InOperator: void <init>()>();

        return;
    }
}
