public abstract class ORG.as220.tinySQL.tsRow extends java.lang.Object
{
    private java.util.Hashtable colcache;

    public void <init>()
    {
        ORG.as220.tinySQL.tsRow r0;
        java.util.Hashtable $r1;

        r0 := @this: ORG.as220.tinySQL.tsRow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<ORG.as220.tinySQL.tsRow: java.util.Hashtable colcache> = $r1;

        return;
    }

    public void <init>(ORG.as220.tinySQL.tsRow)
    {
        ORG.as220.tinySQL.tsRow r0, r1;
        java.util.Hashtable $r2;

        r0 := @this: ORG.as220.tinySQL.tsRow;

        r1 := @parameter0: ORG.as220.tinySQL.tsRow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<ORG.as220.tinySQL.tsRow: java.util.Hashtable colcache>;

        r0.<ORG.as220.tinySQL.tsRow: java.util.Hashtable colcache> = $r2;

        return;
    }

    public int findColumn(java.lang.String)
    {
        ORG.as220.tinySQL.tsRow r0;
        java.lang.String r1;
        java.lang.Integer r2, $r6;
        int i0, $i1, i2;
        ORG.as220.tinySQL.tsColumn r3;
        java.util.Hashtable $r4, $r7;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: ORG.as220.tinySQL.tsRow;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<ORG.as220.tinySQL.tsRow: java.util.Hashtable colcache>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r5;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i1;

     label1:
        i0 = virtualinvoke r0.<ORG.as220.tinySQL.tsRow: int size()>();

        i2 = 0;

        goto label4;

     label2:
        r3 = virtualinvoke r0.<ORG.as220.tinySQL.tsRow: ORG.as220.tinySQL.tsColumn getColumnDefinition(int)>(i2);

        $z0 = virtualinvoke r3.<ORG.as220.tinySQL.tsColumn: boolean isValidName(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

        $r7 = r0.<ORG.as220.tinySQL.tsRow: java.util.Hashtable colcache>;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i2);

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return i2;

     label3:
        i2 = i2 + 1;

     label4:
        if i2 < i0 goto label2;

        return -1;
    }

    public abstract ORG.as220.tinySQL.tsColumn getColumnDefinition(int);

    public abstract java.lang.Object get(int) throws ORG.as220.tinySQL.tinySQLException;

    public abstract void refresh() throws ORG.as220.tinySQL.tinySQLException;

    public abstract int size();
}
