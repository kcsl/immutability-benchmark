class ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator extends ORG.as220.tinySQL.sqlparser.Operator
{

    private void <init>()
    {
        ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator;

        specialinvoke r0.<ORG.as220.tinySQL.sqlparser.Operator: void <init>(ORG.as220.tinySQL.sqlparser.Operator)>(null);

        return;
    }

    public java.lang.Object evaluate(java.lang.Object, java.lang.Object) throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator r0;
        java.lang.Object r1, r2, $r5;
        java.lang.Boolean r3, $r6, $r7, $r8;
        ORG.as220.tinySQL.sqlparser.Operator $r4;
        boolean $z0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = <ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator: ORG.as220.tinySQL.sqlparser.Operator BETWEEN>;

        $r5 = virtualinvoke $r4.<ORG.as220.tinySQL.sqlparser.Operator: java.lang.Object evaluate(java.lang.Object,java.lang.Object)>(r1, r2);

        r3 = (java.lang.Boolean) $r5;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r8 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r8;

     label1:
        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r7;
    }

    public java.lang.String toString()
    {
        ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator;

        return " NOT BETWEEN ";
    }

    public int getLevel()
    {
        ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator;

        return 1;
    }

    void <init>(ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator)
    {
        ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator r0, r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator;

        r1 := @parameter0: ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator;

        specialinvoke r0.<ORG.as220.tinySQL.sqlparser.Operator$NotBetweenOperator: void <init>()>();

        return;
    }
}
