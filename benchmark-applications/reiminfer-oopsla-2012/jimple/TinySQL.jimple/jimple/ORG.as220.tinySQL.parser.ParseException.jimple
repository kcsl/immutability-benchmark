public class ORG.as220.tinySQL.parser.ParseException extends java.lang.Exception
{
    protected boolean specialConstructor;
    public ORG.as220.tinySQL.parser.Token currentToken;
    public int[][] expectedTokenSequences;
    public java.lang.String[] tokenImage;
    protected java.lang.String eol;

    public void <init>(ORG.as220.tinySQL.parser.Token, int[][], java.lang.String[])
    {
        ORG.as220.tinySQL.parser.ParseException r0;
        ORG.as220.tinySQL.parser.Token r1;
        int[][] r2;
        java.lang.String[] r3;
        java.lang.String $r4;

        r0 := @this: ORG.as220.tinySQL.parser.ParseException;

        r1 := @parameter0: ORG.as220.tinySQL.parser.Token;

        r2 := @parameter1: int[][];

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>("");

        $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String eol> = $r4;

        r0.<ORG.as220.tinySQL.parser.ParseException: boolean specialConstructor> = 1;

        r0.<ORG.as220.tinySQL.parser.ParseException: ORG.as220.tinySQL.parser.Token currentToken> = r1;

        r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences> = r2;

        r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String[] tokenImage> = r3;

        return;
    }

    public void <init>()
    {
        ORG.as220.tinySQL.parser.ParseException r0;
        java.lang.String $r1;

        r0 := @this: ORG.as220.tinySQL.parser.ParseException;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String eol> = $r1;

        r0.<ORG.as220.tinySQL.parser.ParseException: boolean specialConstructor> = 0;

        return;
    }

    public void <init>(java.lang.String)
    {
        ORG.as220.tinySQL.parser.ParseException r0;
        java.lang.String r1, $r2;

        r0 := @this: ORG.as220.tinySQL.parser.ParseException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String eol> = $r2;

        r0.<ORG.as220.tinySQL.parser.ParseException: boolean specialConstructor> = 0;

        return;
    }

    public java.lang.String getMessage()
    {
        ORG.as220.tinySQL.parser.ParseException r0;
        boolean $z0;
        int[][] $r1, $r3, $r7, $r13, $r14, $r25, $r53, $r74;
        int[] $r2, $r4, $r8, $r15, $r16, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i13, i14;
        java.lang.StringBuilder $r5, $r11, $r12, $r17, $r20, $r21, $r22, $r24, $r28, $r32, $r33, $r37, $r38, $r40, $r43, $r44, $r47, $r48, $r50, $r52, $r54, $r56, $r58, $r59, $r60, $r62, $r63, $r65, $r67, $r68, $r69, $r71;
        java.lang.String $r6, $r10, $r18, $r19, $r23, $r29, $r30, $r31, $r34, $r36, $r39, $r49, $r51, $r55, $r57, $r61, $r64, $r66, $r70, $r72, r73, r75, r77, r78, r79, r80;
        java.lang.String[] $r9, $r35;
        ORG.as220.tinySQL.parser.Token $r27, $r41, $r42, $r45, $r46, r76;

        r0 := @this: ORG.as220.tinySQL.parser.ParseException;

        $z0 = r0.<ORG.as220.tinySQL.parser.ParseException: boolean specialConstructor>;

        if $z0 != 0 goto label01;

        $r72 = specialinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();

        return $r72;

     label01:
        r73 = "";

        i10 = 0;

        i11 = 0;

        goto label07;

     label02:
        $r1 = r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences>;

        $r2 = $r1[i11];

        $i0 = lengthof $r2;

        if i10 >= $i0 goto label03;

        $r25 = r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences>;

        $r26 = $r25[i11];

        i10 = lengthof $r26;

     label03:
        i12 = 0;

        goto label05;

     label04:
        $r5 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r73);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r9 = r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String[] tokenImage>;

        $r7 = r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences>;

        $r8 = $r7[i11];

        $i2 = $r8[i12];

        $r10 = $r9[$i2];

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r73 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        i12 = i12 + 1;

     label05:
        $r3 = r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences>;

        $r4 = $r3[i11];

        $i1 = lengthof $r4;

        if i12 < $i1 goto label04;

        $r13 = r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences>;

        $r16 = $r13[i11];

        $r14 = r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences>;

        $r15 = $r14[i11];

        $i3 = lengthof $r15;

        $i4 = $i3 - 1;

        $i5 = $r16[$i4];

        if $i5 == 0 goto label06;

        $r22 = new java.lang.StringBuilder;

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r73);

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        r73 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r17 = new java.lang.StringBuilder;

        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r73);

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r18);

        $r19 = r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String eol>;

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r73 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        i11 = i11 + 1;

     label07:
        $r74 = r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences>;

        $i13 = lengthof $r74;

        if i11 < $i13 goto label02;

        r75 = "Encountered \"";

        $r27 = r0.<ORG.as220.tinySQL.parser.ParseException: ORG.as220.tinySQL.parser.Token currentToken>;

        r76 = $r27.<ORG.as220.tinySQL.parser.Token: ORG.as220.tinySQL.parser.Token next>;

        i14 = 0;

        goto label11;

     label08:
        if i14 == 0 goto label09;

        $r69 = new java.lang.StringBuilder;

        $r70 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r75);

        specialinvoke $r69.<java.lang.StringBuilder: void <init>(java.lang.String)>($r70);

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r75 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $i6 = r76.<ORG.as220.tinySQL.parser.Token: int kind>;

        if $i6 != 0 goto label10;

        $r33 = new java.lang.StringBuilder;

        $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r75);

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>($r34);

        $r35 = r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String[] tokenImage>;

        $r36 = $r35[0];

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        r75 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label10:
        $r28 = new java.lang.StringBuilder;

        $r29 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r75);

        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>($r29);

        $r30 = r76.<ORG.as220.tinySQL.parser.Token: java.lang.String image>;

        $r31 = virtualinvoke r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String add_escapes(java.lang.String)>($r30);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        r75 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r76 = r76.<ORG.as220.tinySQL.parser.Token: ORG.as220.tinySQL.parser.Token next>;

        i14 = i14 + 1;

     label11:
        if i14 < i10 goto label08;

     label12:
        $r38 = new java.lang.StringBuilder;

        $r39 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r75);

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>($r39);

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" at line ");

        $r41 = r0.<ORG.as220.tinySQL.parser.ParseException: ORG.as220.tinySQL.parser.Token currentToken>;

        $r42 = $r41.<ORG.as220.tinySQL.parser.Token: ORG.as220.tinySQL.parser.Token next>;

        $i7 = $r42.<ORG.as220.tinySQL.parser.Token: int beginLine>;

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column ");

        $r45 = r0.<ORG.as220.tinySQL.parser.ParseException: ORG.as220.tinySQL.parser.Token currentToken>;

        $r46 = $r45.<ORG.as220.tinySQL.parser.Token: ORG.as220.tinySQL.parser.Token next>;

        $i8 = $r46.<ORG.as220.tinySQL.parser.Token: int beginColumn>;

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        r77 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r48 = new java.lang.StringBuilder;

        $r49 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r77);

        specialinvoke $r48.<java.lang.StringBuilder: void <init>(java.lang.String)>($r49);

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r51 = r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String eol>;

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        r78 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = r0.<ORG.as220.tinySQL.parser.ParseException: int[][] expectedTokenSequences>;

        $i9 = lengthof $r53;

        if $i9 != 1 goto label13;

        $r63 = new java.lang.StringBuilder;

        $r64 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r78);

        specialinvoke $r63.<java.lang.StringBuilder: void <init>(java.lang.String)>($r64);

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Was expecting:");

        $r66 = r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String eol>;

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r79 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label13:
        $r54 = new java.lang.StringBuilder;

        $r55 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r78);

        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>($r55);

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Was expecting one of:");

        $r57 = r0.<ORG.as220.tinySQL.parser.ParseException: java.lang.String eol>;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        r79 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $r60 = new java.lang.StringBuilder;

        $r61 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r79);

        specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>($r61);

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        r80 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        return r80;
    }

    protected java.lang.String add_escapes(java.lang.String)
    {
        ORG.as220.tinySQL.parser.ParseException r0;
        java.lang.String r1, r3, $r14, $r17, $r19, $r22;
        java.lang.StringBuffer $r4;
        char $c1, $c2;
        java.lang.StringBuilder $r13, $r15, $r16, $r18;
        int $i3, $i4, $i5, i6, $i7;

        r0 := @this: ORG.as220.tinySQL.parser.ParseException;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        i6 = 0;

        goto label15;

     label01:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        lookupswitch($c1)
        {
            case 0: goto label02;
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 34: goto label08;
            case 39: goto label09;
            case 92: goto label10;
            default: goto label11;
        };

     label02:
        goto label14;

     label03:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label14;

     label04:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label14;

     label05:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label14;

     label06:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label14;

     label07:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label14;

     label08:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label14;

     label09:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");

        goto label14;

     label10:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        goto label14;

     label11:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        if $c2 < 32 goto label12;

        if $c2 <= 126 goto label13;

     label12:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("0000");

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($c2, 16);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r3 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("\\u");

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        $i4 = $i3 - 4;

        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        $r17 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        goto label14;

     label13:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label14:
        i6 = i6 + 1;

     label15:
        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if i6 < $i7 goto label01;

        $r22 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r22;
    }
}
