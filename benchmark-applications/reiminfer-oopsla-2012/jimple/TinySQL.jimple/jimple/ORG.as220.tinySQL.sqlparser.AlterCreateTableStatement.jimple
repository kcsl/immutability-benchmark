public class ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement extends java.lang.Object implements ORG.as220.tinySQL.sqlparser.SQLStatement
{
    private ORG.as220.tinySQL.tinySQL db;
    private ORG.as220.tinySQL.sqlparser.CreateTableStatement cstmt;
    private ORG.as220.tinySQL.tinySQLStatement statement;
    private int updateCount;

    public void <init>(ORG.as220.tinySQL.tinySQLStatement) throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        ORG.as220.tinySQL.tinySQLStatement r1;
        java.sql.Connection $r2;
        ORG.as220.tinySQL.tinySQL $r3;
        java.sql.SQLException $r4;
        ORG.as220.tinySQL.tinySQLException $r5;
        ORG.as220.tinySQL.tinySQLConnection r6;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        r1 := @parameter0: ORG.as220.tinySQL.tinySQLStatement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: ORG.as220.tinySQL.tinySQLStatement statement> = r1;

        $r2 = virtualinvoke r1.<ORG.as220.tinySQL.tinySQLStatement: java.sql.Connection getConnection()>();

        r6 = (ORG.as220.tinySQL.tinySQLConnection) $r2;

        $r3 = virtualinvoke r6.<ORG.as220.tinySQL.tinySQLConnection: ORG.as220.tinySQL.tinySQL getTinySqlHandle()>();

        r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: ORG.as220.tinySQL.tinySQL db> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new ORG.as220.tinySQL.tinySQLException;

        specialinvoke $r5.<ORG.as220.tinySQL.tinySQLException: void <init>(java.lang.String,java.lang.Exception)>("Unable to resolve connection", $r4);

        throw $r5;

     label4:
        return;

        catch java.sql.SQLException from label1 to label2 with label3;
    }

    public ORG.as220.tinySQL.tinySQLStatement getStatement()
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        ORG.as220.tinySQL.tinySQLStatement $r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        $r1 = r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: ORG.as220.tinySQL.tinySQLStatement statement>;

        return $r1;
    }

    public void setCreateTableStatement(ORG.as220.tinySQL.sqlparser.CreateTableStatement)
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        ORG.as220.tinySQL.sqlparser.CreateTableStatement r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        r1 := @parameter0: ORG.as220.tinySQL.sqlparser.CreateTableStatement;

        r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: ORG.as220.tinySQL.sqlparser.CreateTableStatement cstmt> = r1;

        return;
    }

    public ORG.as220.tinySQL.sqlparser.CreateTableStatement getCreateTableStatement()
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        ORG.as220.tinySQL.sqlparser.CreateTableStatement $r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        $r1 = r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: ORG.as220.tinySQL.sqlparser.CreateTableStatement cstmt>;

        return $r1;
    }

    public ORG.as220.tinySQL.tinySQL getDatabase() throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        ORG.as220.tinySQL.tinySQL $r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        $r1 = r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: ORG.as220.tinySQL.tinySQL db>;

        return $r1;
    }

    public boolean execute() throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        ORG.as220.tinySQL.tinySQL $r1;
        boolean $z0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        $r1 = virtualinvoke r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: ORG.as220.tinySQL.tinySQL getDatabase()>();

        $z0 = virtualinvoke $r1.<ORG.as220.tinySQL.tinySQL: boolean AlterCreateTable(ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement)>(r0);

        return $z0;
    }

    public int getUpdateCount() throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        int $i0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        $i0 = r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: int updateCount>;

        return $i0;
    }

    public void setUpdateCount(int)
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        int i0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        i0 := @parameter0: int;

        r0.<ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement: int updateCount> = i0;

        return;
    }

    public ORG.as220.tinySQL.tinySQLResultSet getResultSet() throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        return null;
    }

    public boolean getMoreResults() throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        return 0;
    }

    public java.util.Vector getParameters()
    {
        ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement r0;
        java.util.Vector $r1;

        r0 := @this: ORG.as220.tinySQL.sqlparser.AlterCreateTableStatement;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        return $r1;
    }
}
