public class ORG.as220.tinySQL.textFileDriver extends ORG.as220.tinySQL.tinySQLDriver
{

    static void <clinit>()
    {
        ORG.as220.tinySQL.textFileDriver $r1;
        java.lang.Exception $r2;

     label1:
        $r1 = new ORG.as220.tinySQL.textFileDriver;

        specialinvoke $r1.<ORG.as220.tinySQL.textFileDriver: void <init>()>();

        staticinvoke <java.sql.DriverManager: void registerDriver(java.sql.Driver)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>()
    {
        ORG.as220.tinySQL.textFileDriver r0;

        r0 := @this: ORG.as220.tinySQL.textFileDriver;

        specialinvoke r0.<ORG.as220.tinySQL.tinySQLDriver: void <init>()>();

        return;
    }

    public java.sql.Connection connect(java.lang.String, java.util.Properties) throws java.sql.SQLException
    {
        ORG.as220.tinySQL.textFileDriver r0;
        java.lang.String r1, $r4;
        boolean $z0;
        ORG.as220.tinySQL.tinySQLException $r2;
        ORG.as220.tinySQL.textFileConnection $r3;
        java.util.Properties $r5, r7;

        r0 := @this: ORG.as220.tinySQL.textFileDriver;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.util.Properties;

        $z0 = virtualinvoke r0.<ORG.as220.tinySQL.textFileDriver: boolean acceptsURL(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        if r7 != null goto label1;

        $r5 = new java.util.Properties;

        specialinvoke $r5.<java.util.Properties: void <init>()>();

        r7 = $r5;

        virtualinvoke $r5.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("user", "");

     label1:
        $r3 = new ORG.as220.tinySQL.textFileConnection;

        $r4 = virtualinvoke r7.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("user");

        specialinvoke $r3.<ORG.as220.tinySQL.textFileConnection: void <init>(java.lang.String,java.lang.String,java.sql.Driver,java.util.Properties)>($r4, r1, r0, r7);

        return $r3;

     label2:
        $r2 = new ORG.as220.tinySQL.tinySQLException;

        specialinvoke $r2.<ORG.as220.tinySQL.tinySQLException: void <init>(java.lang.String)>("the given url was not valid");

        throw $r2;
    }

    public boolean acceptsURL(java.lang.String) throws java.sql.SQLException
    {
        ORG.as220.tinySQL.textFileDriver r0;
        java.lang.String r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: ORG.as220.tinySQL.textFileDriver;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 >= 12 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(5, 12);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("tinySQL");

        return $z0;
    }

    public java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException
    {
        ORG.as220.tinySQL.textFileDriver r0;

        r0 := @this: ORG.as220.tinySQL.textFileDriver;

        return null;
    }
}
