public final class ORG.as220.tinySQL.parser.SimpleCharStream extends java.lang.Object
{
    public static final boolean staticFlag;
    int bufsize;
    int available;
    int tokenBegin;
    public int bufpos;
    private int[] bufline;
    private int[] bufcolumn;
    private int column;
    private int line;
    private boolean prevCharIsCR;
    private boolean prevCharIsLF;
    private java.io.Reader inputStream;
    private char[] buffer;
    private int maxNextCharInd;
    private int inBuf;

    private final void ExpandBuff(boolean)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        boolean z0;
        char[] r1, $r5, $r8, $r9;
        int[] r2, r3, $r6, $r7, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52;
        java.lang.Throwable $r15;
        java.lang.Error $r16;
        java.lang.String $r17;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        z0 := @parameter0: boolean;

        $i0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i1 = $i0 + 2048;

        r1 = newarray (char)[$i1];

        $i2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i3 = $i2 + 2048;

        r2 = newarray (int)[$i3];

        $i4 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i5 = $i4 + 2048;

        r3 = newarray (int)[$i5];

     label1:
        if z0 == 0 goto label2;

        $r8 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i27 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i25 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i24 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i26 = $i25 - $i24;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i27, r1, 0, $i26);

        $r9 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i29 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i28 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i31 = $i29 - $i28;

        $i30 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r1, $i31, $i30);

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer> = r1;

        $r10 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i35 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i33 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i32 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i34 = $i33 - $i32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, $i35, r2, 0, $i34);

        $r11 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i37 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i36 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i39 = $i37 - $i36;

        $i38 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r2, $i39, $i38);

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline> = r2;

        $r12 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i43 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i41 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i40 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i42 = $i41 - $i40;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, $i43, r3, 0, $i42);

        $r13 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i45 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i44 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i47 = $i45 - $i44;

        $i46 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r3, $i47, $i46);

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn> = r3;

        $i51 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i49 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i48 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i50 = $i49 - $i48;

        $i52 = $i51 + $i50;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = $i52;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd> = $i52;

        goto label5;

     label2:
        $r5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i9 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i7 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i8 = $i7 - $i6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i9, r1, 0, $i8);

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer> = r1;

        $r6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i13 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i11 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i10 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i12 = $i11 - $i10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i13, r2, 0, $i12);

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline> = r2;

        $r7 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i17 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i15 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i14 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i16 = $i15 - $i14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i17, r3, 0, $i16);

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn> = r3;

        $i19 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i18 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i20 = $i19 - $i18;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = $i20;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd> = $i20;

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        $r16 = new java.lang.Error;

        $r17 = virtualinvoke $r15.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r16.<java.lang.Error: void <init>(java.lang.String)>($r17);

        throw $r16;

     label5:
        $i21 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i22 = $i21 + 2048;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize> = $i22;

        $i23 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available> = $i23;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin> = 0;

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private final void FillBuff() throws java.io.IOException
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        java.io.Reader $r2, $r5;
        java.io.IOException $r3, $r4;
        char[] $r6;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $i2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd>;

        $i1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available>;

        if $i2 != $i1 goto label06;

        $i6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available>;

        $i5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        if $i6 != $i5 goto label03;

        $i14 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        if $i14 <= 2048 goto label01;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = 0;

        $i18 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available> = $i18;

        goto label06;

     label01:
        $i15 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        if $i15 >= 0 goto label02;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = 0;

        goto label06;

     label02:
        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void ExpandBuff(boolean)>(0);

        goto label06;

     label03:
        $i8 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available>;

        $i7 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        if $i8 <= $i7 goto label04;

        $i13 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available> = $i13;

        goto label06;

     label04:
        $i10 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i9 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available>;

        $i11 = $i10 - $i9;

        if $i11 >= 2048 goto label05;

        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void ExpandBuff(boolean)>(1);

        goto label06;

     label05:
        $i12 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available> = $i12;

     label06:
        $r5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: java.io.Reader inputStream>;

        $r6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i23 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd>;

        $i24 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available>;

        $i25 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd>;

        $i26 = $i24 - $i25;

        $i27 = virtualinvoke $r5.<java.io.Reader: int read(char[],int,int)>($r6, $i23, $i26);

        if $i27 != -1 goto label07;

        $r2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: java.io.Reader inputStream>;

        virtualinvoke $r2.<java.io.Reader: void close()>();

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>()>();

        throw $r3;

     label07:
        $i3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd>;

        $i4 = $i3 + $i27;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd> = $i4;

     label08:
        return;

     label09:
        $r4 := @caughtexception;

        $i19 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i20 = $i19 - 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = $i20;

        virtualinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void backup(int)>(0);

        $i21 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        if $i21 != -1 goto label10;

        $i22 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin> = $i22;

     label10:
        throw $r4;

        catch java.io.IOException from label06 to label08 with label09;
    }

    public final char BeginToken() throws java.io.IOException
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        char c0;
        int $i1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin> = -1;

        c0 = virtualinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char readChar()>();

        $i1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin> = $i1;

        return c0;
    }

    private final void UpdateLineColumn(char)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i15, $i16, $i17, $i18, $i19;
        boolean $z0, $z1;
        int[] $r1, $r2;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        c0 := @parameter0: char;

        $i1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column>;

        $i2 = $i1 + 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = $i2;

        $z0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsLF>;

        if $z0 == 0 goto label1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsLF> = 0;

        $i13 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line>;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = 1;

        $i15 = $i13 + 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line> = $i15;

        goto label3;

     label1:
        $z1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsCR>;

        if $z1 == 0 goto label3;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsCR> = 0;

        if c0 != 10 goto label2;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsLF> = 1;

        goto label3;

     label2:
        $i10 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line>;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = 1;

        $i12 = $i10 + 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line> = $i12;

     label3:
        tableswitch(c0)
        {
            case 9: goto label6;
            case 10: goto label5;
            case 11: goto label7;
            case 12: goto label7;
            case 13: goto label4;
            default: goto label7;
        };

     label4:
        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsCR> = 1;

        goto label7;

     label5:
        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsLF> = 1;

        goto label7;

     label6:
        $i3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column>;

        $i4 = $i3 - 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = $i4;

        $i8 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column>;

        $i5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column>;

        $i6 = $i5 & 7;

        $i7 = 8 - $i6;

        $i9 = $i8 + $i7;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = $i9;

        goto label7;

     label7:
        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i16 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i17 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line>;

        $r1[$i16] = $i17;

        $r2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i18 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i19 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column>;

        $r2[$i18] = $i19;

        return;
    }

    public final char readChar() throws java.io.IOException
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        char c0, $c12;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        char[] $r1, $r2;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $i1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf>;

        if $i1 <= 0 goto label2;

        $i6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf>;

        $i7 = $i6 - 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf> = $i7;

        $i8 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i9 = $i8 + 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = $i9;

        $i10 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        if $i9 != $i10 goto label1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = 0;

     label1:
        $r2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i11 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $c12 = $r2[$i11];

        return $c12;

     label2:
        $i2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i3 = $i2 + 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = $i3;

        $i4 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd>;

        if $i3 < $i4 goto label3;

        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void FillBuff()>();

     label3:
        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        c0 = $r1[$i5];

        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void UpdateLineColumn(char)>(c0);

        return c0;
    }

    public final int getColumn()
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public final int getLine()
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public final int getEndColumn()
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public final int getEndLine()
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public final int getBeginColumn()
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public final int getBeginLine()
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public final void backup(int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        i0 := @parameter0: int;

        $i1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf>;

        $i2 = $i1 + i0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf> = $i2;

        $i3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i4 = $i3 - i0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = $i4;

        if $i4 >= 0 goto label1;

        $i6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i7 = $i6 + $i5;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = $i7;

     label1:
        return;
    }

    public void <init>(java.io.Reader, int, int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.Reader r1;
        int i0, i1, i2, $i3;
        char[] $r2;
        int[] $r3, $r4;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = -1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line> = 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsCR> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsLF> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: java.io.Reader inputStream> = r1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line> = i0;

        $i3 = i1 - 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = $i3;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize> = i2;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available> = i2;

        $r2 = newarray (char)[i2];

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer> = $r2;

        $r3 = newarray (int)[i2];

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline> = $r3;

        $r4 = newarray (int)[i2];

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn> = $r4;

        return;
    }

    public void <init>(java.io.Reader, int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.Reader r1;
        int i0, i1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void <init>(java.io.Reader,int,int,int)>(r1, i0, i1, 4096);

        return;
    }

    public void <init>(java.io.Reader)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.Reader r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void <init>(java.io.Reader,int,int,int)>(r1, 1, 1, 4096);

        return;
    }

    public void ReInit(java.io.Reader, int, int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.Reader r1;
        int i0, i1, i2, $i3, $i4;
        char[] $r2, $r3, $r6;
        int[] $r4, $r5;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: java.io.Reader inputStream> = r1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line> = i0;

        $i3 = i1 - 1;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = $i3;

        $r2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        if $r2 == null goto label1;

        $r6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i4 = lengthof $r6;

        if i2 == $i4 goto label2;

     label1:
        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize> = i2;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int available> = i2;

        $r3 = newarray (char)[i2];

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer> = $r3;

        $r4 = newarray (int)[i2];

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline> = $r4;

        $r5 = newarray (int)[i2];

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn> = $r5;

     label2:
        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsCR> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: boolean prevCharIsLF> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int maxNextCharInd> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin> = 0;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos> = -1;

        return;
    }

    public void ReInit(java.io.Reader, int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.Reader r1;
        int i0, i1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int,int)>(r1, i0, i1, 4096);

        return;
    }

    public void ReInit(java.io.Reader)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.Reader r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.Reader;

        virtualinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int,int)>(r1, 1, 1, 4096);

        return;
    }

    public void <init>(java.io.InputStream, int, int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.InputStream r1;
        int i0, i1, i2;
        java.io.InputStreamReader $r2;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);

        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void <init>(java.io.Reader,int,int,int)>($r2, i0, i1, 4096);

        return;
    }

    public void <init>(java.io.InputStream, int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.InputStream r1;
        int i0, i1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void <init>(java.io.InputStream,int,int,int)>(r1, i0, i1, 4096);

        return;
    }

    public void <init>(java.io.InputStream)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.InputStream r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void <init>(java.io.InputStream,int,int,int)>(r1, 1, 1, 4096);

        return;
    }

    public void ReInit(java.io.InputStream, int, int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.InputStream r1;
        int i0, i1, i2;
        java.io.InputStreamReader $r2;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);

        virtualinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int,int)>($r2, i0, i1, 4096);

        return;
    }

    public void ReInit(java.io.InputStream)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.InputStream r1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void ReInit(java.io.InputStream,int,int,int)>(r1, 1, 1, 4096);

        return;
    }

    public void ReInit(java.io.InputStream, int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        java.io.InputStream r1;
        int i0, i1;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<ORG.as220.tinySQL.parser.SimpleCharStream: void ReInit(java.io.InputStream,int,int,int)>(r1, i0, i1, 4096);

        return;
    }

    public final java.lang.String GetImage()
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r2, $r4, $r5, $r8, $r9;
        char[] $r3, $r6, $r10;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        $i1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i0 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        if $i1 < $i0 goto label1;

        $r9 = new java.lang.String;

        $r10 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i12 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i9 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i8 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i10 = $i9 - $i8;

        $i11 = $i10 + 1;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r10, $i12, $i11);

        return $r9;

     label1:
        $r1 = new java.lang.StringBuilder;

        $r2 = new java.lang.String;

        $r3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i4 = $i3 - $i2;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r3, $i5, $i4);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = new java.lang.String;

        $r6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i7 = $i6 + 1;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>($r6, 0, $i7);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public final char[] GetSuffix(int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        char[] r1, $r2, $r3, $r4;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        i0 := @parameter0: int;

        r1 = newarray (char)[i0];

        $i1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i2 = $i1 + 1;

        if $i2 < i0 goto label1;

        $r4 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i16 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i17 = $i16 - i0;

        $i18 = $i17 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i18, r1, 0, i0);

        goto label2;

     label1:
        $r2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i4 = i0 - $i3;

        $i5 = $i4 - 1;

        $i10 = $i6 - $i5;

        $i7 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i8 = i0 - $i7;

        $i9 = $i8 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i10, r1, 0, $i9);

        $r3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer>;

        $i11 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i12 = i0 - $i11;

        $i15 = $i12 - 1;

        $i13 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i14 = $i13 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, $i15, $i14);

     label2:
        return r1;
    }

    public void Done()
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: char[] buffer> = null;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline> = null;

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn> = null;

        return;
    }

    public void adjustBeginLineColumn(int, int)
    {
        ORG.as220.tinySQL.parser.SimpleCharStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i38, i39, i40, i41, i43, $i44;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: ORG.as220.tinySQL.parser.SimpleCharStream;

        i35 := @parameter0: int;

        i0 := @parameter1: int;

        i36 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        if $i2 < $i1 goto label1;

        $i31 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i30 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i33 = $i31 - $i30;

        $i32 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf>;

        $i34 = $i33 + $i32;

        i37 = $i34 + 1;

        goto label2;

     label1:
        $i4 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int tokenBegin>;

        $i6 = $i4 - $i3;

        $i5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufpos>;

        $i7 = $i6 + $i5;

        $i9 = $i7 + 1;

        $i8 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int inBuf>;

        i37 = $i9 + $i8;

     label2:
        i38 = 0;

        i39 = 0;

        i40 = 0;

        goto label4;

     label3:
        $r11 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $r11[$i21] = i35;

        $r12 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i26 = $r12[$i23];

        $i28 = i40 + $i26;

        $r13 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i27 = $r13[$i21];

        i41 = $i28 - $i27;

        $r14 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i29 = i0 + i40;

        $r14[$i21] = $i29;

        i40 = i41;

        i38 = i38 + 1;

     label4:
        if i38 >= i37 goto label5;

        $r9 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i20 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i21 = i36 % $i20;

        i39 = $i21;

        $i25 = $r9[$i21];

        $r10 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        i36 = i36 + 1;

        $i22 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i23 = i36 % $i22;

        $i24 = $r10[$i23];

        if $i25 == $i24 goto label3;

     label5:
        if i38 >= i37 goto label9;

        $r3 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        i43 = i35 + 1;

        $r3[i39] = i35;

        $r4 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i12 = i0 + i40;

        $r4[i39] = $i12;

        goto label8;

     label6:
        $r5 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i13 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i14 = i36 % $i13;

        i39 = $i14;

        $i18 = $r5[$i14];

        $r6 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        i36 = i36 + 1;

        $i15 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int bufsize>;

        $i16 = i36 % $i15;

        $i17 = $r6[$i16];

        if $i18 == $i17 goto label7;

        $r8 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i19 = i43;

        i43 = i43 + 1;

        $r8[$i14] = $i19;

        goto label8;

     label7:
        $r7 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $r7[$i14] = i43;

     label8:
        $i44 = i38;

        i38 = i38 + 1;

        if $i44 < i37 goto label6;

     label9:
        $r1 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufline>;

        $i10 = $r1[i39];

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int line> = $i10;

        $r2 = r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int[] bufcolumn>;

        $i11 = $r2[i39];

        r0.<ORG.as220.tinySQL.parser.SimpleCharStream: int column> = $i11;

        return;
    }

    public static void <clinit>()
    {
        <ORG.as220.tinySQL.parser.SimpleCharStream: boolean staticFlag> = 0;

        return;
    }
}
