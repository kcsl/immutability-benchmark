public class ORG.as220.tinySQL.textFileHTMLQuoting extends ORG.as220.tinySQL.textFileQuoting
{

    public void <init>()
    {
        ORG.as220.tinySQL.textFileHTMLQuoting r0;

        r0 := @this: ORG.as220.tinySQL.textFileHTMLQuoting;

        specialinvoke r0.<ORG.as220.tinySQL.textFileQuoting: void <init>()>();

        return;
    }

    public java.lang.String doQuoting(java.lang.String, int) throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.textFileHTMLQuoting r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;
        ORG.as220.tinySQL.tinySQLException $r3, $r4;

        r0 := @this: ORG.as220.tinySQL.textFileHTMLQuoting;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= i0 goto label1;

        $r4 = new ORG.as220.tinySQL.tinySQLException;

        specialinvoke $r4.<ORG.as220.tinySQL.tinySQLException: void <init>(java.lang.String)>("Quoting limit exceeded for native string");

        throw $r4;

     label1:
        r2 = staticinvoke <ORG.as220.tinySQL.util.CharacterEntityParser: java.lang.String quoteString(java.lang.String)>(r1);

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 <= i0 goto label2;

        $r3 = new ORG.as220.tinySQL.tinySQLException;

        specialinvoke $r3.<ORG.as220.tinySQL.tinySQLException: void <init>(java.lang.String)>("Quoting limit exceeded for quoted string");

        throw $r3;

     label2:
        return r2;
    }

    public java.lang.String undoQuoting(java.lang.String)
    {
        ORG.as220.tinySQL.textFileHTMLQuoting r0;
        java.lang.String r1, r2;

        r0 := @this: ORG.as220.tinySQL.textFileHTMLQuoting;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <ORG.as220.tinySQL.util.CharacterEntityParser: java.lang.String parseEntityValue(java.lang.String)>(r1);

        return r2;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        java.io.PrintStream $r2;
        ORG.as220.tinySQL.textFileHTMLQuoting $r3;

        r0 := @parameter0: java.lang.String[];

        $r2 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <java.sql.DriverManager: void setLogStream(java.io.PrintStream)>($r2);

        $r3 = new ORG.as220.tinySQL.textFileHTMLQuoting;

        specialinvoke $r3.<ORG.as220.tinySQL.textFileHTMLQuoting: void <init>()>();

        specialinvoke $r3.<ORG.as220.tinySQL.textFileHTMLQuoting: void doTest(java.lang.String)>("\"Scary, isn\'t it?\", she said.");

        specialinvoke $r3.<ORG.as220.tinySQL.textFileHTMLQuoting: void doTest(java.lang.String)>("Not really!");

        specialinvoke $r3.<ORG.as220.tinySQL.textFileHTMLQuoting: void doTest(java.lang.String)>("It won\'t work, but who cares?");

        specialinvoke $r3.<ORG.as220.tinySQL.textFileHTMLQuoting: void doTest(java.lang.String)>("Not really! \" yo\" ");

        specialinvoke $r3.<ORG.as220.tinySQL.textFileHTMLQuoting: void doTest(java.lang.String)>("");

        return;
    }

    private void doTest(java.lang.String) throws java.lang.Exception
    {
        ORG.as220.tinySQL.textFileHTMLQuoting r0;
        java.lang.String r1, r2, r3, $r7, $r11, $r15;
        java.lang.StringBuilder $r4, $r6, $r8, $r10, $r12, $r14;
        java.io.PrintStream $r5, $r9, $r13;

        r0 := @this: ORG.as220.tinySQL.textFileHTMLQuoting;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<ORG.as220.tinySQL.textFileHTMLQuoting: java.lang.String doQuoting(java.lang.String,int)>(r1, 100);

        r3 = virtualinvoke r0.<ORG.as220.tinySQL.textFileHTMLQuoting: java.lang.String undoQuoting(java.lang.String)>(r2);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Test : ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Quot : ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("UnQu : ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r15);

        return;
    }
}
