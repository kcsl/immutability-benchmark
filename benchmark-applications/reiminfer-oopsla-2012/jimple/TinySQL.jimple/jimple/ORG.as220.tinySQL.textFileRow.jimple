public class ORG.as220.tinySQL.textFileRow extends ORG.as220.tinySQL.tsRawRow
{
    private byte[] data;
    private java.lang.Object[] cache;

    public void <init>(java.util.Vector, ORG.as220.tinySQL.tinySQLConverter)
    {
        ORG.as220.tinySQL.textFileRow r0;
        java.util.Vector r1;
        ORG.as220.tinySQL.tinySQLConverter r2;

        r0 := @this: ORG.as220.tinySQL.textFileRow;

        r1 := @parameter0: java.util.Vector;

        r2 := @parameter1: ORG.as220.tinySQL.tinySQLConverter;

        specialinvoke r0.<ORG.as220.tinySQL.tsRawRow: void <init>(java.util.Vector,ORG.as220.tinySQL.tinySQLConverter)>(r1, r2);

        r0.<ORG.as220.tinySQL.textFileRow: byte[] data> = null;

        r0.<ORG.as220.tinySQL.textFileRow: java.lang.Object[] cache> = null;

        return;
    }

    public void <init>(ORG.as220.tinySQL.textFileRow)
    {
        ORG.as220.tinySQL.textFileRow r0, r1;

        r0 := @this: ORG.as220.tinySQL.textFileRow;

        r1 := @parameter0: ORG.as220.tinySQL.textFileRow;

        specialinvoke r0.<ORG.as220.tinySQL.tsRawRow: void <init>(ORG.as220.tinySQL.tsRawRow)>(r1);

        r0.<ORG.as220.tinySQL.textFileRow: byte[] data> = null;

        r0.<ORG.as220.tinySQL.textFileRow: java.lang.Object[] cache> = null;

        virtualinvoke r0.<ORG.as220.tinySQL.textFileRow: void clearCache()>();

        return;
    }

    public void setData(byte[])
    {
        ORG.as220.tinySQL.textFileRow r0;
        byte[] r1;

        r0 := @this: ORG.as220.tinySQL.textFileRow;

        r1 := @parameter0: byte[];

        r0.<ORG.as220.tinySQL.textFileRow: byte[] data> = r1;

        virtualinvoke r0.<ORG.as220.tinySQL.textFileRow: void clearCache()>();

        return;
    }

    public byte[] getData()
    {
        ORG.as220.tinySQL.textFileRow r0;
        byte[] $r1;

        r0 := @this: ORG.as220.tinySQL.textFileRow;

        $r1 = r0.<ORG.as220.tinySQL.textFileRow: byte[] data>;

        return $r1;
    }

    protected void nativePut(ORG.as220.tinySQL.tsColumn, java.lang.Object)
    {
        ORG.as220.tinySQL.textFileRow r0;
        ORG.as220.tinySQL.tsColumn r1;
        java.lang.Object r2;
        byte[] $r3, $r4, r6;
        int $i0, $i1, $i2;
        java.lang.Exception $r5;

        r0 := @this: ORG.as220.tinySQL.textFileRow;

        r1 := @parameter0: ORG.as220.tinySQL.tsColumn;

        r2 := @parameter1: java.lang.Object;

     label1:
        r6 = (byte[]) r2;

        if r6 != null goto label2;

        $i2 = virtualinvoke r1.<ORG.as220.tinySQL.tsColumn: int getSize()>();

        r6 = newarray (byte)[$i2];

     label2:
        $r3 = r0.<ORG.as220.tinySQL.textFileRow: byte[] data>;

        if $r3 != null goto label3;

        staticinvoke <ORG.as220.tinySQL.util.Log: void warn(java.lang.String)>("data is null, skipping update of this row.");

        goto label6;

     label3:
        $r4 = r0.<ORG.as220.tinySQL.textFileRow: byte[] data>;

        $i0 = virtualinvoke r1.<ORG.as220.tinySQL.tsColumn: int getBytePosition()>();

        $i1 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, $r4, $i0, $i1);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        staticinvoke <ORG.as220.tinySQL.util.Log: void error(java.lang.String,java.lang.Exception)>("Error on conversion: ", $r5);

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected java.lang.Object nativeGet(ORG.as220.tinySQL.tsColumn) throws ORG.as220.tinySQL.tinySQLException
    {
        ORG.as220.tinySQL.textFileRow r0;
        ORG.as220.tinySQL.tsColumn r1;
        int i0, $i1;
        byte[] r2, $r3;

        r0 := @this: ORG.as220.tinySQL.textFileRow;

        r1 := @parameter0: ORG.as220.tinySQL.tsColumn;

        i0 = virtualinvoke r1.<ORG.as220.tinySQL.tsColumn: int getSize()>();

        r2 = newarray (byte)[i0];

        $r3 = r0.<ORG.as220.tinySQL.textFileRow: byte[] data>;

        $i1 = virtualinvoke r1.<ORG.as220.tinySQL.tsColumn: int getBytePosition()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, r2, 0, i0);

        return r2;
    }
}
